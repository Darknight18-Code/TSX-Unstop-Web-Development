
/* ===== TEXT EFFECTS ===== */

/* Gradient text effect */
.text-gradient {
  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
  background-size: 200% auto;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: text-gradient 3s linear infinite;
}

/* Glowing text effect */
.text-glow {
  text-shadow: 0 0 5px rgba(var(--primary-rgb), 0.5), 
               0 0 10px rgba(var(--primary-rgb), 0.3), 
               0 0 15px rgba(var(--primary-rgb), 0.1);
}

/* Dramatic shadow text */
.text-shadow-dramatic {
  text-shadow: 2px 2px 0px var(--primary-color),
               4px 4px 0px rgba(var(--primary-dark-rgb), 0.8),
               6px 6px 0px rgba(var(--primary-dark-rgb), 0.6);
}

/* 3D text effect */
.text-3d {
  text-shadow: 0 1px 0 #ccc,
               0 2px 0 #c9c9c9,
               0 3px 0 #bbb,
               0 4px 0 #b9b9b9,
               0 5px 0 #aaa,
               0 6px 1px rgba(0,0,0,.1),
               0 0 5px rgba(0,0,0,.1),
               0 1px 3px rgba(0,0,0,.3),
               0 3px 5px rgba(0,0,0,.2),
               0 5px 10px rgba(0,0,0,.25),
               0 10px 10px rgba(0,0,0,.2),
               0 20px 20px rgba(0,0,0,.15);
}

/* Text reveal effect */
.text-reveal {
  position: relative;
  color: transparent;
  overflow: hidden;
}

.text-reveal::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  color: var(--body-color);
  overflow: hidden;
  white-space: nowrap;
  animation: text-reveal 2s cubic-bezier(0.77, 0, 0.175, 1) forwards;
}

.dark-mode .text-reveal::before {
  color: var(--light-color);
}

/* Typewriter effect */
.typewriter {
  overflow: hidden;
  border-right: 2px solid var(--primary-color);
  white-space: nowrap;
  margin: 0 auto;
  animation: 
    typing 3.5s steps(30, end),
    blink 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

/* Shaking text (use sparingly!) */
.text-shake {
  animation: shake 0.5s ease-in-out infinite;
  display: inline-block;
}

/* Text floating animation */
.text-float {
  animation: float 4s ease-in-out infinite;
  display: inline-block;
}

/* ===== BACKGROUND EFFECTS ===== */

/* Animated gradient background */
.bg-gradient-animated {
  background: linear-gradient(-45deg, 
    var(--primary-color), 
    var(--primary-dark), 
    var(--secondary-color), 
    var(--secondary-dark));
  background-size: 400% 400%;
  animation: gradient-flow 15s ease infinite;
}

/* Mesh gradient background */
.bg-mesh-gradient {
  background: 
    radial-gradient(at 40% 20%, rgba(var(--primary-rgb), 0.3) 0px, transparent 50%),
    radial-gradient(at 80% 0%, rgba(var(--secondary-rgb), 0.3) 0px, transparent 50%),
    radial-gradient(at 0% 50%, rgba(var(--accent-rgb), 0.3) 0px, transparent 50%),
    radial-gradient(at 80% 50%, rgba(var(--primary-rgb), 0.3) 0px, transparent 50%),
    radial-gradient(at 0% 100%, rgba(var(--primary-rgb), 0.3) 0px, transparent 50%),
    radial-gradient(at 80% 100%, rgba(var(--secondary-rgb), 0.3) 0px, transparent 50%),
    radial-gradient(at 0% 0%, rgba(var(--accent-rgb), 0.3) 0px, transparent 50%);
}

/* Glass effect */
.glass-effect {
  background: rgba(255, 255, 255, 0.1);
  border-radius: var(--radius-lg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.2);
}

.dark-mode .glass-effect {
  background: rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

/* Pattern background */
.bg-pattern {
  background-color: var(--light-color);
  background-image: 
    radial-gradient(var(--primary-light) 2px, transparent 2px),
    radial-gradient(var(--primary-light) 2px, var(--light-color) 2px);
  background-size: 40px 40px;
  background-position: 0 0, 20px 20px;
}

.dark-mode .bg-pattern {
  background-color: var(--dark-color);
  background-image: 
    radial-gradient(var(--primary-light) 2px, transparent 2px),
    radial-gradient(var(--primary-light) 2px, var(--dark-color) 2px);
}

/* Noise texture */
.bg-noise {
  position: relative;
}

.bg-noise::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.05;
  z-index: 1;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23000000' fill-opacity='0.4' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E");
}

.dark-mode .bg-noise::before {
  opacity: 0.1;
  filter: invert(1);
}

/* ===== CARD & ELEMENT EFFECTS ===== */

/* Floating card effect */
.float-card {
  transition: transform 0.3s var(--ease-out);
}

.float-card:hover {
  transform: translateY(-10px);
}

/* 3D tilt card effect */
.tilt-card {
  transform-style: preserve-3d;
  transition: transform 0.2s var(--ease-out);
}

.tilt-card:hover {
  transform: perspective(1000px) rotateX(5deg) rotateY(5deg);
}

/* Glow effect */
.glow-effect {
  transition: all 0.3s ease;
}

.glow-effect:hover {
  box-shadow: 0 0 150px rgba(var(--primary-rgb), 0.7),
              0 0 300px rgba(var(--primary-rgb), 0.4),
              0 0 450px rgba(var(--primary-rgb), 0.2);
}
.neon-border-effect {
  position: relative;
  transition: all 0.3s ease;
  border-radius: var(--radius-lg);
  border: 2px solid rgba(var(--primary-rgb), 0.4);
  background-color: var(--light-color);
  box-shadow:
    0 0 12px rgba(var(--primary-rgb), 0.5),
    0 0 24px rgba(var(--primary-rgb), 0.4),
    0 0 36px rgba(var(--secondary-rgb), 0.3),
    0 0 48px rgba(var(--secondary-rgb), 0.2);
  overflow: hidden;
}

.neon-border-effect:hover {
  box-shadow:
    0 0 20px rgba(var(--primary-rgb), 0.8),
    0 0 40px rgba(var(--primary-rgb), 0.6),
    0 0 60px rgba(var(--secondary-rgb), 0.4),
    0 0 80px rgba(var(--secondary-rgb), 0.3);
  animation: glowPulse 2s ease-in-out infinite;
}

.neon-border-effect::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  border-radius: inherit;
  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color), var(--primary-color));
  background-size: 400% 400%;
  opacity: 0.75;
  animation: gradientBorder 3s linear infinite;

  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}


/* Ripple effect */
.ripple-effect {
  position: relative;
  overflow: hidden;
}

.ripple-effect::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.2) 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform 0.5s, opacity 1s;
}

.ripple-effect:active::after {
  transform: scale(0, 0);
  opacity: 0.3;
  transition: 0s;
}

/* Moving border effect */
.moving-border {
  position: relative;
  padding: var(--space-2);
  background: transparent;
}

.moving-border::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(to right, transparent, var(--primary-color), transparent);
  transform: translateX(-100%);
  animation: moving-border-x 3s ease-in-out infinite;
}

.moving-border::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 2px;
  height: 100%;
  background: linear-gradient(to bottom, transparent, var(--primary-color), transparent);
  transform: translateY(-100%);
  animation: moving-border-y 3s ease-in-out 1.5s infinite;
}

@keyframes moving-border-x {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes moving-border-y {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100%); }
}

/* Morph button effect */
.morph-button {
  transition: border-radius 0.3s var(--ease-out);
  border-radius: var(--radius-lg);
}

.morph-button:hover {
  border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
}

/* Magnetic button effect (requires JS to fully implement) */
.magnetic-button {
  position: relative;
  transition: transform 0.3s var(--ease-out);
}

/* Gradient border */
.gradient-border {
  position: relative;
  background: var(--card-bg);
  border-radius: var(--radius-lg);
  z-index: 1;
}

.gradient-border::before {
  content: '';
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -2px;
  left: -2px;
  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color), var(--accent-color), var(--primary-color));
  background-size: 300% 300%;
  animation: gradient-flow 5s linear infinite;
  border-radius: calc(var(--radius-lg) + 2px);
  z-index: -1;
}

/* Rainbow shadow */
.rainbow-shadow {
  position: relative;
  z-index: 1;
}

.rainbow-shadow::after {
  content: '';
  position: absolute;
  inset: -5px;
  z-index: -1;
  background: conic-gradient(
    from 0deg, 
    var(--primary-color), 
    var(--secondary-color), 
    var(--accent-color), 
    var(--success-color), 
    var(--info-color), 
    var(--primary-color)
  );
  filter: blur(15px);
  border-radius: var(--radius-lg);
  opacity: 0;
  transition: opacity 0.3s var(--ease-out);
}

.rainbow-shadow:hover::after {
  opacity: 0.7;
}

/* Shimmer effect */
.shimmer {
  position: relative;
  overflow: hidden;
}

.shimmer::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.25),
    transparent
  );
  transform: skewX(-25deg);
  animation: shimmer 3s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 200%; }
}

/* Pulsating element */
.pulsate {
  animation: pulse 2s infinite;
}

/* Flip card effect (3D) */
.flip-card {
  perspective: 1000px;
  width: 100%;
  height: 100%;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: var(--radius-lg);
}

.flip-card-front {
  background-color: var(--card-bg);
}

.flip-card-back {
  background-color: var(--primary-color);
  color: white;
  transform: rotateY(180deg);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-4);
}

/* Liquid button effect */
.liquid-button {
  position: relative;
  z-index: 1;
  transition: all 0.3s var(--ease-out);
}

.liquid-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(var(--primary-rgb), 0.2);
  border-radius: var(--radius-full);
  transform: scaleX(0.85) scaleY(0.65);
  filter: blur(25px);
  z-index: -1;
  transition: all 0.3s var(--ease-out);
}

.liquid-button:hover::before {
  transform: scaleX(1) scaleY(1.35);
  filter: blur(15px);
}

/* Parallax effect (needs JS for full implementation) */
.parallax-element {
  transition: transform 0.2s var(--ease-out);
}